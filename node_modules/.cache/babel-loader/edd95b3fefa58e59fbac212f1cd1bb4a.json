{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\maule\\\\Desktop\\\\ZapperAcademy\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\maule\\\\Desktop\\\\ZapperAcademy\\\\src\\\\components\\\\TransferHistory.js\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Reload } from \"@web3uikit/icons\";\nimport { Table } from \"@web3uikit/core\";\nfunction TransferHistory(_ref) {\n  var chain = _ref.chain,\n    wallet = _ref.wallet,\n    transfers = _ref.transfers,\n    setTransfers = _ref.setTransfers;\n  function getTokenTransfers() {\n    return _getTokenTransfers.apply(this, arguments);\n  }\n  function _getTokenTransfers() {\n    _getTokenTransfers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var response;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(\"http://localhost:8080/tokenTransfers\", {\n                params: {\n                  address: wallet,\n                  chain: chain\n                }\n              });\n            case 2:\n              response = _context.sent;\n              if (response.data) {\n                setTransfers(response.data);\n                console.log(response.data);\n              }\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _getTokenTransfers.apply(this, arguments);\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tabHeading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"Tansfer History \", /*#__PURE__*/React.createElement(Reload, {\n    onClick: getTokenTransfers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, transfers.length > 0 && /*#__PURE__*/React.createElement(Table, {\n    pageSize: 8,\n    noPagination: false,\n    style: {\n      width: \"90vw\"\n    },\n    columnsConfig: \"16vw 18vw 18vw 18vw 16vw\",\n    data: transfers.map(function (e) {\n      return [e.symbol, (Number(e.value) / Number(\"1e\".concat(e.decimals))).toFixed(3), \"\".concat(e.from_address.slice(0, 4), \"...\").concat(e.from_address.slice(38)), \"\".concat(e.to_address.slice(0, 4), \"...\").concat(e.to_address.slice(38)), e.block_timestamp.slice(0, 10)];\n    }),\n    header: [/*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }\n    }, \"Token\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }, \"Amount\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, \"From\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, \"To\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    }, \"Date\")],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  })));\n}\nexport default TransferHistory;","map":{"version":3,"names":["React","axios","Reload","Table","TransferHistory","chain","wallet","transfers","setTransfers","getTokenTransfers","get","params","address","response","data","console","log","length","width","map","e","symbol","Number","value","decimals","toFixed","from_address","slice","to_address","block_timestamp"],"sources":["C:/Users/maule/Desktop/ZapperAcademy/src/components/TransferHistory.js"],"sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Reload } from \"@web3uikit/icons\";\r\nimport { Table } from \"@web3uikit/core\";\r\n\r\nfunction TransferHistory({ chain, wallet, transfers, setTransfers }) {\r\n  async function getTokenTransfers() {\r\n    const response = await axios.get(\"http://localhost:8080/tokenTransfers\", {\r\n      params: {\r\n        address: wallet,\r\n        chain: chain,\r\n      },\r\n    });\r\n\r\n    if (response.data) {\r\n      setTransfers(response.data);\r\n      console.log(response.data);\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"tabHeading\">\r\n        Tansfer History <Reload onClick={getTokenTransfers} />\r\n      </div>\r\n      <div>\r\n        {transfers.length > 0 && (\r\n          <Table\r\n            pageSize={8}\r\n            noPagination={false}\r\n            style={{ width: \"90vw\" }}\r\n            columnsConfig=\"16vw 18vw 18vw 18vw 16vw\"\r\n            data={transfers.map((e) => [\r\n              e.symbol,\r\n              (Number(e.value) / Number(`1e${e.decimals}`)).toFixed(3),\r\n              `${e.from_address.slice(0, 4)}...${e.from_address.slice(38)}`,\r\n              `${e.to_address.slice(0, 4)}...${e.to_address.slice(38)}`,\r\n              e.block_timestamp.slice(0,10),\r\n            ])}\r\n            header={[\r\n              <span>Token</span>,\r\n              <span>Amount</span>,\r\n              <span>From</span>,\r\n              <span>To</span>,\r\n              <span>Date</span>,\r\n            ]}\r\n          />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TransferHistory;"],"mappings":";;+CACA;AADA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,KAAK,QAAQ,iBAAiB;AAEvC,SAASC,eAAe,OAA6C;EAAA,IAA1CC,KAAK,QAALA,KAAK;IAAEC,MAAM,QAANA,MAAM;IAAEC,SAAS,QAATA,SAAS;IAAEC,YAAY,QAAZA,YAAY;EAAA,SAChDC,iBAAiB;IAAA;EAAA;EAAA;IAAA,gFAAhC;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACyBR,KAAK,CAACS,GAAG,CAAC,sCAAsC,EAAE;gBACvEC,MAAM,EAAE;kBACNC,OAAO,EAAEN,MAAM;kBACfD,KAAK,EAAEA;gBACT;cACF,CAAC,CAAC;YAAA;cALIQ,QAAQ;cAOd,IAAIA,QAAQ,CAACC,IAAI,EAAE;gBACjBN,YAAY,CAACK,QAAQ,CAACC,IAAI,CAAC;gBAC3BC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACC,IAAI,CAAC;cAC5B;YAAC;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CACF;IAAA;EAAA;EAGD,oBACE,uDACE;IAAK,SAAS,EAAC,YAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,oCACT,oBAAC,MAAM;IAAC,OAAO,EAAEL,iBAAkB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAClD,eACN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGF,SAAS,CAACU,MAAM,GAAG,CAAC,iBACnB,oBAAC,KAAK;IACJ,QAAQ,EAAE,CAAE;IACZ,YAAY,EAAE,KAAM;IACpB,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAO,CAAE;IACzB,aAAa,EAAC,0BAA0B;IACxC,IAAI,EAAEX,SAAS,CAACY,GAAG,CAAC,UAACC,CAAC;MAAA,OAAK,CACzBA,CAAC,CAACC,MAAM,EACR,CAACC,MAAM,CAACF,CAAC,CAACG,KAAK,CAAC,GAAGD,MAAM,aAAMF,CAAC,CAACI,QAAQ,EAAG,EAAEC,OAAO,CAAC,CAAC,CAAC,YACrDL,CAAC,CAACM,YAAY,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,gBAAMP,CAAC,CAACM,YAAY,CAACC,KAAK,CAAC,EAAE,CAAC,aACxDP,CAAC,CAACQ,UAAU,CAACD,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,gBAAMP,CAAC,CAACQ,UAAU,CAACD,KAAK,CAAC,EAAE,CAAC,GACvDP,CAAC,CAACS,eAAe,CAACF,KAAK,CAAC,CAAC,EAAC,EAAE,CAAC,CAC9B;IAAA,EAAE;IACH,MAAM,EAAE,cACN;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,WAAkB,eAClB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,YAAmB,eACnB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,UAAiB,eACjB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,QAAe,eACf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,UAAiB,CACjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAEL,CACG,CACL;AAEP;AAEA,eAAevB,eAAe"},"metadata":{},"sourceType":"module"}